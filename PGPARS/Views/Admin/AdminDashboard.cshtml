@model AdminDashboardViewModel
<body>
    <div class="main">
        <!--<div class="container-opaque">
            <div class="text-center text-outline p-3">
                <h2>Admin Dashboard</h2>
            </div>
        </div>-->
        <div class="chart-container">
            <canvas id="myChart"></canvas>
        </div>
        <div class="table-responsive shadow-sm rounded" style="padding-top: 10px;">
            <table class="table align-middle text-dark">
                <thead class="text-uppercase">
                    <tr>
                        <th>Applicant</th>
                        <th>Status</th>
                        <th>Last Interaction</th>
                    </tr>    
                </thead>
                @foreach (var applicant in Model.Applicants)
                {
                    <tr>
                        <td class="specialtext">
                            <a asp-action="ApplicantDetails" asp-controller="Applicant" asp-route-Nnumber="@applicant.Nnumber" style="text-decoration: none; color: white;">
                            @applicant.FullName
                            </a>
                        </td>
                        <td>@applicant.Status</td>
                        <td>
                            @{
                                var lastInteraction = Model.AuditLogs
                                    .Where(log => log.Details.Equals(applicant.FullName))
                                    .OrderByDescending(log => log.Action)
                                    .FirstOrDefault();
                            }
                            @if (lastInteraction != null)
                            {
                                @lastInteraction.TimeStamp
                            }
                            else
                            {
                                <span>No recent interactions</span>
                            }
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
</body>
                
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function ()
    {
        fetch('/Admin/GetChartData') // Ensure the route matches your controller method
            .then(response => response.json())
            .then(data =>
                {
                const ctx = document.getElementById('myChart').getContext('2d');
                new Chart(ctx,
                    {
                    type: 'bar',
                    data:
                    {
                        labels: data.labels,
                        datasets:
                        [{
                            label: 'Status of Applicants',
                            data: data.values,
                            borderWidth: 0,
                            backgroundColor: '#0d215f'
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            x: {
                                ticks: {
                                    color: 'white', // Changes x-axis label color
                                    font: {size: 16}
                                }
                            },
                            y: {
                                ticks: {
                                    color: 'white', // Changes y-axis label color
                                    font: {size: 20}
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                labels: {
                                    color: 'white', // Changes legend text color
                                    font: {size: 20}
                                }
                            },
                            title: {
                                display: true,
                                text: 'Applicant Status Distribution',
                                color: 'white', // Changes chart title color
                                font: {
                                    size: 20
                                }
                            }
                        }
                    }
                });
            })
            .catch(error => console.error("Error fetching chart data:", error));
    });
</script>

<!-- Old Stuff

    <div class="dashboard-cell">
        <div class="table-responsive shadow-sm rounded">
            <table class="table align-middle text-dark">
                <tbody>
                    <thead>
                        <th>Applicant</th>
                        <th>Reviews</th>
                    </thead>

                    {
                        var reviews = new List<(string NNumber, DateTime DateTime)>
                        {
                            ("N" + new Random().Next(10000000, 99999999), DateTime.Now.AddMinutes(-10)),
                            ("N" + new Random().Next(10000000, 99999999), DateTime.Now.AddMinutes(-20)),
                            ("N" + new Random().Next(10000000, 99999999), DateTime.Now.AddMinutes(-30))
                        }
                        .OrderByDescending(r => r.DateTime)
                        .ToList();

                        foreach (var review in reviews)
                        {
                            <tr>
                                <td>Applicant</td>
                                <td>
                                    review.NNumber - review.DateTime.ToString("MM/dd/yyyy HH:mm")
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>

-->
