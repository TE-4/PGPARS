@model AdminDashboardViewModel

<div class="main">
    <div class="container-opaque">
        <div class="text-center text-outline p-3">
            <h2>Admin Dashboard</h2>
        </div>
    </div>
    <!--<div class="chart-container" style="width: 80%; margin: 0 auto;">
        <canvas id="myChart"></canvas>
    </div>-->
    <div class="dashboard-table">
        <div class="dashboard-body">
            <div class="dashboard-row">
                <div class="dashboard-cell">
                    <div class="table-responsive shadow-sm rounded">
                        <table class="table align-middle text-dark">
                            <tbody>
                                <thead>
                                    <th>Applicant</th>
                                    <th>Status</th>
                                </thead>
                                @foreach (var applicant in Model.Applicants)
                                {
                                    <tr>
                                        <td>
                                            <a asp-action="ApplicantDetails" asp-controller="Applicant" asp-route-Nnumber="@applicant.Nnumber" style="text-decoration: none; color: white;">
                                                @applicant.FullName
                                            </a>
                                        </td>
                                        <td style="text-align: center;">(Status)</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="dashboard-cell">
                    <div class="table-responsive shadow-sm rounded">
                        <table class="table align-middle text-dark">
                            <tbody>
                                <thead>
                                    <th>Applicant</th>
                                    <th>Reviews</th>
                                </thead>

                                @{
                                    var reviews = new List<(string NNumber, DateTime DateTime)>
                                    {
                                        ("N" + new Random().Next(10000000, 99999999), DateTime.Now.AddMinutes(-10)),
                                        ("N" + new Random().Next(10000000, 99999999), DateTime.Now.AddMinutes(-20)),
                                        ("N" + new Random().Next(10000000, 99999999), DateTime.Now.AddMinutes(-30))
                                    }
                                    .OrderByDescending(r => r.DateTime)
                                    .ToList();

                                    foreach (var review in reviews)
                                    {
                                        <tr>
                                            <td>Applicant</td>
                                            <td>
                                                @review.NNumber - @review.DateTime.ToString("MM/dd/yyyy HH:mm")
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="dashboard-cell">
                    <h3>Funding</h3>
                    Coming Soon!
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function ()
    {
        fetch('/Admin/GetChartData') // Ensure the route matches your controller method
            .then(response => response.json())
            .then(data =>
                {
                const ctx = document.getElementById('myChart').getContext('2d');
                new Chart(ctx,
                    {
                    type: 'bar',
                    data:
                    {
                        labels: data.labels,
                        datasets:
                        [{
                            label: 'Status of Applicants',
                            data: data.values,
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }]
                    },
                    options:
                    {
                        responsive: true,
                        scales:
                        {
                            y:
                            {
                                beginAtZero: true
                            }
                        }
                    }
                });
            })
            .catch(error => console.error("Error fetching chart data:", error));
    });
</script>